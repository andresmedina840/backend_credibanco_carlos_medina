name: üöÄ Deploy Full Stack to EC2

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      EC2_IP: ${{ secrets.AWS_EC2_IP }}
      REPO_URL: https://github.com/andresmedina840/backend_credibanco_carlos_medina.git
      SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    steps:
      # ======================
      # 1. CONFIGURACI√ìN SSH
      # ======================
      - name: üîê Configurar acceso SSH
        run: |
          echo "üóùÔ∏è Preparando entorno seguro..."
          echo "$SSH_KEY" > clave.pem
          chmod 600 clave.pem
          mkdir -p ~/.ssh
          ssh-keyscan -H $EC2_IP >> ~/.ssh/known_hosts

      # ======================
      # 2. DESPLIEGUE PRINCIPAL
      # ======================
      - name: üöÄ Desplegar aplicaci√≥n y base de datos
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.AWS_EC2_IP }}
          username: ubuntu
          script: |
            # Crear estructura de directorios
            sudo mkdir -p /home/ubuntu/app/mysql/conf.d
            sudo mkdir -p /home/ubuntu/mysql_data
            sudo chown -R 999:999 /home/ubuntu/mysql_data
            sudo chown -R ubuntu:ubuntu /home/ubuntu/app

            # Clonar/actualizar repositorio
            cd /home/ubuntu/app
            rm -rf .git  # Eliminar conflicto de repos previo
            git clone $REPO_URL .
            
            # Forzar actualizaci√≥n del c√≥digo
            git reset --hard origin/main
            git clean -fd -x
            
            # Instalar Docker Compose si no existe
            if ! command -v docker-compose &> /dev/null; then
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            # Construir y levantar servicios
            docker-compose down -v --remove-orphans
            docker-compose build --no-cache
            docker-compose up -d

            # Verificaci√≥n final
            echo "‚úÖ Estado de los servicios:"
            docker ps -a --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
            echo "üìÑ Logs de inicializaci√≥n:"
            docker-compose logs --tail=50
          debug: true
          timeout: 15m

      # ======================
      # 3. VERIFICACI√ìN POST-DEPLOY
      # ======================
      - name: ü©∫ Health Check
        run: |
          echo "üîç Probando endpoints..."
          # Esperar 30 segundos para inicializaci√≥n
          sleep 30
          curl -sSf http://$EC2_IP:8080/api/health || echo "‚ö†Ô∏è Fallo en health check"
          curl -sSf http://$EC2_IP:8080/api/clientes || echo "‚ö†Ô∏è Fallo en endpoint de clientes"
        timeout-minutes: 5