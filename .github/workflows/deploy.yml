name: Deploy to AWS EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Build with Maven
      run: |
        mvn clean package -DskipTests -T 1C -Dmaven.compiler.release=21
        touch .env  # Crear archivo .env vacío si no existe

    - name: Verify build artifacts
      run: |
        ls -l target/*.jar || echo "⚠️ No se generó el JAR"
        ls -l docker-compose*.yml || echo "⚠️ Faltan archivos compose"
        ls -l .env || echo "⚠️ Faltan variables de entorno"

    - name: Build Docker image
      run: |
        docker build -t backend-credibanco . \
        --build-arg JAR_FILE=target/credibanco.jar

    - name: Compress Docker image
      run: docker save backend-credibanco | gzip > image.tar.gz

    - name: Transfer files to EC2
      uses: appleboy/scp-action@v0.1.3
      with:
        debug: true
        host: ${{ secrets.AWS_EC2_IP }}
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: |
          target/credibanco.jar
          docker-compose-db.yml
          docker-compose-app.yml
          .env
          image.tar.gz
        target: "/home/ubuntu/app"
        overwrite: true

    - name: Deploy on EC2
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.AWS_EC2_IP }}
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /home/ubuntu/app
          docker load -i image.tar.gz
          docker-compose -f docker-compose-db.yml up -d
          sleep 20  # Esperar inicialización de MySQL
          docker-compose -f docker-compose-app.yml up -d