name: Deploy Backend Credibanco

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout del código
        uses: actions/checkout@v4

      - name: 🔧 Configurar JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: 🚀 Compilar Backend con Maven
        run: mvn clean package -DskipTests

      - name: 🛠️ Verificar que el JAR se haya generado
        run: |
          ls -l target/credibanco.jar || { 
            echo "❌ ERROR: No se generó el JAR"; 
            exit 1; 
          }

      - name: 🐳 Iniciar Docker
        run: sudo systemctl start docker

      - name: 🏗️ Construir imagen Docker
        run: |
          docker build -t backend-credibanco .
          docker images | grep backend-credibanco || { 
            echo "❌ ERROR: No se generó la imagen Docker"; 
            exit 1; 
          }

      - name: 📦 Guardar imagen Docker como tar.gz
        run: |
          docker save -o image.tar.gz backend-credibanco
          ls -l image.tar.gz || { 
            echo "❌ ERROR: No se generó image.tar.gz"; 
            exit 1; 
          }

      - name: 📂 Verificar archivos antes de la transferencia
        run: ls -l target/credibanco.jar docker-compose.yml .env image.tar.gz

      - name: 🚀 Transferir archivos al servidor
        uses: appleboy/scp-action@v0.1.3
        with:
          debug: true
          host: ${{ secrets.AWS_EC2_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: |
            ./target/credibanco.jar
            ./docker-compose.yml
            ./.env
            ./image.tar.gz
          target: "/home/ubuntu/app"
          overwrite: true

      - name: 🖥️ Conectar al servidor y desplegar
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.AWS_EC2_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/app
            docker load -i image.tar.gz
            docker-compose down
            docker-compose up -d --force-recreate
            docker ps
