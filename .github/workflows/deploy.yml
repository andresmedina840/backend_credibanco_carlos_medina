name: 🚀 Deploy to EC2

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: 🛠️ Implementación en EC2
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: 🔐 Configurar SSH
        run: |
          mkdir -p ~/.ssh/
          chmod 700 ~/.ssh
          ssh-keyscan -H ${{ secrets.AWS_EC2_IP }} >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: 🔑 Cargar clave SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: 🚀 Ejecutar despliegue
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.AWS_EC2_IP }}
          username: ubuntu
          port: 22
          timeout: 2m
          command_timeout: 15m
          script: |
            # 1. Navegar al directorio
            echo "📂 Accediendo al directorio..."
            cd /home/ubuntu/app || { echo "❌ Error al cambiar de directorio"; exit 1; }

            # 2. Actualizar código
            echo "🔄 Actualizando desde GitHub..."
            git stash
            git fetch --all
            git reset --hard origin/main
            git clean -fd
            git pull origin main || { echo "❌ Falló git pull"; exit 1; }

            # 3. Limpiar Docker
            echo "🧹 Limpiando ambiente Docker..."
            docker-compose down \
              --volumes \
              --remove-orphans \
              --rmi local \
              --timeout 60 || true

            # 4. Reconstruir servicios
            echo "🏗️ Reconstruyendo contenedores..."
            docker-compose up -d \
              --build \
              --force-recreate \
              --remove-orphans \
              || { echo "❌ Falló docker-compose up"; exit 1; }

            # 5. Verificar despliegue
            echo "✅ Verificación final..."
            docker ps -a --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
            docker-compose logs --tail=50 --timestamps

            # 6. Limpieza inteligente
            echo "🧼 Optimizando espacio..."
            docker system prune -a --force --filter "until=24h"

            echo "🎉 ¡Despliegue exitoso!"
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1