name: üöÄ Deploy Full Stack to EC2

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      EC2_IP: ${{ secrets.AWS_EC2_IP }}
      REPO_URL: https://github.com/andresmedina840/backend_credibanco_carlos_medina.git
      SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    steps:
      # ======================
      # 1. CONFIGURACI√ìN SSH
      # ======================
      - name: üîê Configurar acceso SSH
        run: |
          echo "üóùÔ∏è Preparando entorno seguro..."
          echo "$SSH_KEY" > clave.pem
          chmod 600 clave.pem
          mkdir -p ~/.ssh
          ssh-keyscan -H $EC2_IP >> ~/.ssh/known_hosts

      # ======================
      # 2. DESPLIEGUE PRINCIPAL
      # ======================
      - name: üöÄ Desplegar aplicaci√≥n y base de datos
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.AWS_EC2_IP }}
          username: ubuntu
          script: |
            # Configuraci√≥n inicial de directorios
            sudo mkdir -p /home/ubuntu/app/mysql/conf.d
            sudo mkdir -p /home/ubuntu/mysql_data
            sudo chown -R 999:999 /home/ubuntu/mysql_data
            sudo chown -R ubuntu:ubuntu /home/ubuntu/app

            # Clonar repositorio
            cd /home/ubuntu/app
            rm -rf ./*  # Limpiar directorio completamente
            git clone $REPO_URL .
            
            # Verificar archivos esenciales
            if [ ! -f docker-compose.yml ] || [ ! -f Dockerfile ]; then
              echo "‚ùå ERROR: Archivos esenciales faltantes!"
              exit 1
            fi
            
            # Instalar Docker Compose (versi√≥n compatible)
            if ! command -v docker-compose &> /dev/null; then
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi
            
            # Ejecutar despliegue
            docker-compose down -v --remove-orphans
            docker-compose build --no-cache
            docker-compose up -d
            
            # Verificaci√≥n extendida
            echo "‚úÖ Estado de los servicios:"
            docker ps -a
            echo "üîç Verificaci√≥n de red:"
            docker network inspect app-network-credibanco
            echo "üìÑ Logs cr√≠ticos:"
            docker-compose logs --tail=100

            # ======================
            # 3. VERIFICACI√ìN POST-DEPLOY
            # ======================
            - name: ü©∫ Health Check
              run: |
                echo "üîç Probando endpoints..."
                # Esperar 30 segundos para inicializaci√≥n
                sleep 30
                curl -sSf http://$EC2_IP:8080/api/health || echo "‚ö†Ô∏è Fallo en health check"
                curl -sSf http://$EC2_IP:8080/api/clientes || echo "‚ö†Ô∏è Fallo en endpoint de clientes"
              timeout-minutes: 5